name: Build with Meson

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        compiler: [g++-9, g++-10, g++-11, clang++-10, clang++-11, clang++-12]
        build: [debug, release]
        include:
          - os: macos-latest
            xcode: default
            build: debug
          - os: macos-latest
            xcode: 11.7
            build: debug
          - os: macos-latest
            compiler: g++-9
            build: debug
          - os: macos-latest
            compiler: g++-10
            build: debug
          - os: macos-latest
            compiler: g++-11
            build: debug


    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      if: matrix.os != 'macos-latest'
      run: sudo apt-get install -y meson

    - name: Install dependencies
      if: startsWith( matrix.os, 'macos')
      run: brew install meson
      
    - name: Install g++-11
      run: sudo apt-get install g++-11 -y
      if: matrix.compiler == 'g++-11' && matrix.os != 'macos-latest'



    - name: Select XCode
      run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer
      if: startsWith( matrix.os, 'macos') && matrix.xcode && matrix.xcode != 'default'

    - name: Create Build Environment
      run: mkdir ${{runner.workspace}}/build

    - name: Configure Meson
      env:
        CXX: ${{ matrix.compiler }}
      run: meson build -Dbuildtype=${{ matrix.build }} -Dwarning_level=3 -Dwerror=true

    - uses: ammaraskar/msvc-problem-matcher@master
      if: ${{ startsWith( matrix.os, 'windows' ) }}
    - uses: ammaraskar/gcc-problem-matcher@master
      if: ${{ startsWith( matrix.compiler, 'g++') }}

    - name: Build
      run: ninja -C build

    - name: Test
      run: ninja -C build test
